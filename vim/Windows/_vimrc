
                "                  Windows 10 PC (WORK) _vimrc config

"========================= Windows ========================={{{

set nocompatible " Disables vi compatibility
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

"}}}
"========================= My Settings ========================={{{

set t_Co=256

" Use visual bell instead of beeping when doing something wrong
set visualbell
set noerrorbells
" And reset the terminal code for the visual bell. If visual bell is set, and
" this line is also included, vim will neither flash nor beep. If visual bell
" is unset, this does nothing.
set t_vb=

" colorscheme
colorscheme colorful256

" Sets font
if has ('gui_running')
  "set guifont=DejaVu_Sans_Mono:h12:cANSI
  set guifont=Meslo\ LG\ S\ for\ Powerline:h12
  set guioptions-=T " remove toolbar
endif

" Turn on syntax highlighting
syntax on
syntax enable

" Show incomplete commands at bottom
set showcmd

" Sets the intial path to my Text Folder
:cd C:\Users\

" Set backup folder after folder created
set backup
set backupdir=D:\VBak\
set directory=D:\VBak\

" ups history size from default of 20
set history=200

"Sets filetypes
autocmd BufNewFile,BufRead *.md,*.mkd,*.mkdn,*.markdown set filetype=markdown
autocmd BufNewFile,BufRead *.txt,*.text set filetype=text
autocmd BufNewFile,BufRead *.html,*.htm set filetype=html

" Abbreviations
abbr _bash #!/bin/bash
abbr _python #!/usr/bin/python3
abbr _awk #!/usr/bin/awk -f

" Sets advanced encryption
set cryptmethod=blowfish2

" Set Wildmode menu
set wildmode=list:longest,list:full
set wildmenu
set showmode
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows
set path+=**                                " Searches all subdirectories and recursively

" Invisible character colors
highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59


"========================= Options ========================={{{2

set autoindent " sets autoindent feature
set number " set line numbering"
set relativenumber 
set linebreak " sets linebreak
set wrap " wraps text
set ruler " set ruler
set autoread "automatically reads when a file has been changed outside vim

"}}}2
" turns off highlight search
"set nohlsearch
set incsearch "searches as characters are entered
set ignorecase "case insensitive searching

" Beautify display of hidden characters (tabs and line breaks)
" (`:set list!` to toggle)
"set listchars=tab:▸\ ,eol:¬

" sets tabstop, softtabstop, shiftwidth and expandtab settings
" set ts=8 sts=0 sw=8 noexpandtab - default settings
set ts=4 sts=4 sw=4 expandtab

" Set region to USA English
set spelllang=en_us

" Allows you to change buffer w/o saving
set hidden

" Sets max column
" set textwidth=85
" set colorcolumn=80

" moving up and down as you would expect
nnoremap <silent> j gj
nnoremap <silent> k gk

" jk is escape
inoremap jk <esc>

" The number of screen lines/columns to keep beside/above/below the cursor
set scrolloff=1
set sidescrolloff=5

" Sets location of internal terminal
noremap \\t :below terminal<CR>
" noremap \\t :botright vertical terminal<CR>

" Easy use of system clipboard
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>y "+yy
nmap <Leader>p "+p
vmap <Leader>p "+p

" Open netrw/fzf/search
nmap <Leader>x :Explore<CR>
nmap <Leader>f :Files<CR>

"}}}
"========================= Folding =============================={{{

" Initializes fold
set foldmethod=marker
set foldlevel=0

" Space to toggle folds.
nnoremap <Space> za
vnoremap <Space> za

"}}}
"========================= Mappings ============================={{{

" Remaps the leader key from \ (defaut)
let mapleader = ","

" see file explorer in tree style - Vimbits.com
let g:netrw_liststyle=3

" Sets ,v to open tab edit of my .vimrc file
nmap <leader>v :tabedit $MYVIMRC<CR>

"If vimrc is the file open, it automatically writes and sources any
"changes
if has("autocmd")
    autocmd bufwritepost _vimrc source $MYVIMRC
endif

" Bubbling Single Lines of Text{{{2
" nmap <C-Up> [e
" nmap <C-Down> ]e
"no <down> ddp
"no <up> ddkP

" Bubbling Multiple Lines of Text
" vmap <C-Up> [egv
" vmap <C-Down> ]egv
"}}}2
" Disabling arrow keys except for bubbling text above{{{2
no <left> <Nop>
no <right> <Nop>
no <up> <Nop>
no <down> <Nop>

ino <left> <Nop>
ino <right> <Nop>
ino <up> <Nop>
ino <down> <Nop>

vno <left> <Nop>
vno <right> <Nop>
vno <up> <Nop>
vno <down> <Nop>
"}}}2
" Remapps Autocomplete Word
:imap <F5> <C-X><C-P> 

" Remapps Autocomplete for Line
:imap <F6> <C-X><C-L>

" Remapps Autocomplete for File
:imap <F7> <C-X><C-F>

" Easy Pairing
imap <leader>' ''<ESC>i
imap <leader>" ""<ESC>i
imap <leader>( ()<ESC>i
imap <leader>[ []<ESC>i
imap <leader>{ {}<ESC>i

" Toggle Spell
inoremap <leader>s <ESC>:set spell<cr>
nnoremap <leader>s <ESC>:set spell<cr>
vnoremap <leader>s <ESC>:set spell<cr>
inoremap <leader>ns <ESC>:set nospell<cr>
nnoremap <leader>ns <ESC>:set nospell<cr>
vnoremap <leader>ns <ESC>:set nospell<cr>

" Save as
inoremap <leader>w <ESC>:w<cr>
nnoremap <leader>w <ESC>:w<cr>
vnoremap <leader>w <ESC>:w<cr>

" Easier Moving page at a time
nmap <leader>d <C-d>
nmap <leader>u <C-u>
vmap <leader>d <C-d>
vmap <leader>u <C-u>

" sets Ctrl-t for new tab
nnoremap <C-t> :tabnew<cr>

" Make splits where you want
set splitbelow splitright

" Make adjusting split sizes a bit more friendly
noremap <silent> <C-Left> :vertical resize +3<CR>
noremap <silent> <C-Right> :vertical resize -3<CR>
noremap <silent> <C-Up> :resize +3<CR>
noremap <silent> <C-Down> :resize -3<CR>

" easier moving between windows
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" creating windows where you want
nnoremap c<C-j> :bel sp new<cr>
nnoremap c<C-k> :abo sp new<cr>
nnoremap c<C-l> :rightb vsp new<cr>
nnoremap c<C-h> :lefta vsp new<cr>

" Ordered list incrementing with ,<enter>
inoremap <leader><cr> <esc>Yp<C-a>elC

" Buffers
" new empty buffer
nmap <Leader>t :enew<CR>
" moves to the next buffer
nmap <Leader>l :bnext<CR>
" moves to the previous buffer
nmap <Leader>h :bprevious<CR>
" closes the current buffer moves to the previous one
nmap <Leader>bd :bd<CR>
" shows all open buffers and their status
nmap <leader>bl :ls<CR>

" file operations
nmap <C-s> :w<CR>
nmap <C-q> :q<CR>

"}}}
"========================= Printing ============================={{{

"Takes out header in print options
set popt=header:0

"}}}
"========================= Plugins =============================={{{

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Powerline 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
let g:Powerline_symbols = 'fancy'
let g:airline_powerline_fonts = 1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTree 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

map <leader>n :NERDTree<cr>

" Close NERDTree after a file is opened
let g:NERDTreeQuitOnOpen=1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vimwiki 
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

filetype plugin on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CtrlP     
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

"}}}
